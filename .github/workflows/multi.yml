name: CI/CD Workflow with Sub-jobs and Manual Approvals

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  set_up:
    runs-on: ubuntu-latest
    outputs:
      branch_output: ${{ steps.set_branch.outputs.scan_branch }}  # Output value to be used in prod and stage jobs
    steps:
      - name: Set Branch
        id: set_branch
        run: |
          # If the event is a schedule, set the branch to 'integration'
          # Otherwise, use the branch specified in the workflow_dispatch or default to 'main'
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            echo "scan_branch=integration" >> $GITHUB_ENV
            echo "scan_branch=integration" >> $GITHUB_OUTPUT  # Set output for this step
          else
            branch=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
            echo "scan_branch=$branch" >> $GITHUB_ENV
            echo "scan_branch=$branch" >> $GITHUB_OUTPUT  # Set output for this step
          fi

  # Development Job
  dev:
    if: ${{ needs.set_up.outputs.branch_output == 'integration' }}  # Conditionally run based on branch_output
    runs-on: ubuntu-latest
    needs: set_up
    outputs:
      dev_output: ${{ steps.set_output.outputs.dev_value }}  # Output value to be used in prod and stage jobs
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set output value in dev
        id: set_output
        run: |
          echo "dev_value=Hello from dev" >> $GITHUB_ENV
          echo "::set-output name=dev_value::Hello from dev"

  # Staging Job
  stage:
    runs-on: ubuntu-latest
    needs: set_up   # Stage depends on dev job
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

  # Production Job
  prod:
    runs-on: ubuntu-latest
    needs: set_up  # Prod depends on stage
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

  # Sub-job 1 in dev (core_image_push)
  core_image_push_dev:
    runs-on: ubuntu-latest
    needs: dev  # Depends on dev job
    steps:
    - name: Push core image for dev
      run: echo "Pushing core image for dev"

  # Sub-job 2 in dev (opensource_image_push)
  opensource_image_push_dev:
    runs-on: ubuntu-latest
    needs: dev  # Depends on dev job
    steps:
    - name: Push opensource image for dev
      run: echo "Pushing opensource image for dev"

  # Sub-job 3 in dev (pre_upgrade_artifact_upload)
  pre_upgrade_artifact_upload_dev:
    runs-on: ubuntu-latest
    needs: dev  # Depends on dev job
    steps:
    - name: Upload pre-upgrade artifacts for dev
      run: echo "Uploading pre-upgrade artifacts for dev"

  # Sub-job 4 in dev (upgrade_artifact_upload) - Needs approval
  upgrade_artifact_upload_dev:
    runs-on: ubuntu-latest
    needs: dev  # Depends on dev job
    environment: 
      name: dev  # Requires approval
    steps:
    - name: Upload upgrade artifacts for dev
      run: echo "Uploading upgrade artifacts for dev"

  # Sub-job 1 in stage (core_image_push)
  core_image_push_stage:
    runs-on: ubuntu-latest
    needs: stage  # Depends on stage job
    steps:
    - name: Push core image for stage
      run: echo "Pushing core image for stage"

  # Sub-job 2 in stage (opensource_image_push)
  opensource_image_push_stage:
    runs-on: ubuntu-latest
    needs: stage  # Depends on stage job
    steps:
    - name: Push opensource image for stage
      run: echo "Pushing opensource image for stage"

  # Sub-job 3 in stage (pre_upgrade_artifact_upload)
  pre_upgrade_artifact_upload_stage:
    runs-on: ubuntu-latest
    needs: stage  # Depends on stage job
    steps:
    - name: Upload pre-upgrade artifacts for stage
      run: echo "Uploading pre-upgrade artifacts for stage"

  # Sub-job 4 in stage (upgrade_artifact_upload) - Needs approval
  upgrade_artifact_upload_stage:
    runs-on: ubuntu-latest
    needs: stage  # Depends on stage job
    environment: 
      name: stage  # Requires approval
    steps:
    - name: Upload upgrade artifacts for stage
      run: echo "Uploading upgrade artifacts for stage"

  # Sub-job 1 in prod (core_image_push)
  core_image_push_prod:
    runs-on: ubuntu-latest
    needs: prod  # Depends on prod job
    steps:
    - name: Push core image for prod
      run: echo "Pushing core image for prod"

  # Sub-job 2 in prod (opensource_image_push)
  opensource_image_push_prod:
    runs-on: ubuntu-latest
    needs: prod  # Depends on prod job
    steps:
    - name: Push opensource image for prod
      run: echo "Pushing opensource image for prod"

  # Sub-job 3 in prod (pre_upgrade_artifact_upload)
  pre_upgrade_artifact_upload_prod:
    runs-on: ubuntu-latest
    needs: prod  # Depends on prod job
    steps:
    - name: Upload pre-upgrade artifacts for prod
      run: echo "Uploading pre-upgrade artifacts for prod"

  # Sub-job 4 in prod (upgrade_artifact_upload) - Needs approval
  upgrade_artifact_upload_prod:
    runs-on: ubuntu-latest
    needs: prod  # Depends on prod job
    environment: 
      name: prod  # Requires approval
    steps:
    - name: Upload upgrade artifacts for prod
      run: echo "Uploading upgrade artifacts for prod"
